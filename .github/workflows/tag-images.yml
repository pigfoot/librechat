name: Docker Images Build on Tag

on:
  push:
    branches: [pf-branch]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - target: node
            file: Dockerfile
            image_name: librechat

    steps:
      # Check out the repository
      - name: Checkout
        uses: actions/checkout@v5
        with:
          fetch-depth: "0"

      # Set up QEMU
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3

      # Prepare the environment
      - name: Prepare environment
        run: |
          cp .env.example .env

      # Get the latest tag
      - name: Get the latest tag
        id: get-latest-tag
        run: |
          echo "tag=$(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=1))" >> $GITHUB_OUTPUT

      # Build images for each target
      - name: Build Images
        id: build-images
        uses: redhat-actions/buildah-build@v2
        with:
          context: .
          image: ${{ matrix.image_name }}
          tags: latest ${{ steps.get-latest-tag.outputs.tag }}
          archs: amd64, arm64
          containerfiles: |
            ./${{ matrix.file }}
          extra-args: |
            --ulimit nofile=65536:65536
          build-args: |
            NPM_CONFIG_MAXSOCKETS=5
        env:
          BUILDAH_ISOLATION: rootless

      # Push To GitHub Container Registry
      - name: Push To GitHub Container Registry
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: ghcr.io/${{ github.repository_owner }}
          image: ${{ steps.build-images.outputs.image }}
          tags: ${{ steps.build-images.outputs.tags }}
          username: ${{ github.actor }}
          password: ${{ github.token }}

      # Push To Docker Hub
      - name: Push To Docker Hub
        uses: redhat-actions/push-to-registry@v2
        with:
          registry: docker.io/${{ secrets.DOCKERHUB_USERNAME }}
          image: ${{ steps.build-images.outputs.image }}
          tags: ${{ steps.build-images.outputs.tags }}
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
